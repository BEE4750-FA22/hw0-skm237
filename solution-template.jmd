---
title: "BEE 4750/5750 Homework 0"
author: "Sarah Mack (skm237)"
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
  term: true
  results: tex
  cache: off
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
using Pkg
Pkg.activate(".")
Pkg.instantiate()
```


# Problem 1

## Problem 1.1
```julia
function square_number(x)
  return x^2
end
```

## Problem 1.2
We can see that $5^2 =$ `j square_number(5)`.

## Problem 1.3
```julia
Pkg.add("Plots")
using Plots
plot(square_number, -10, 10, xlabel="x", ylabel="y", label="square_number(x)", legend=:topright)
```


# Problem 2

## Problem 2.1

If $$ a > \sqrt{x}$$ then $$ \frac{x}{a} < \sqrt{x}$$

If $$ a < \sqrt{x}$$ then $$ \frac{x}{a} > \sqrt{x}$$

If $$ a = \sqrt{x}$$ then $$ \frac{x}{a} = \sqrt{x}$$

## Problem 2.2
```julia
function square_apprx(x,guess,error)
  a=guess
  b=abs(a-(x/a)) # initialize 
    while b>error
     c=x/a
     a=((c+a)/2) # new avg
     b=abs(a-(x/a)) # difference
   end
  return a
end

square_apprx(2,1.8,.001)
```


# Problem 3

## Problem 3.1
```julia
v=rand(1,20)
```

## Problem 3.2
```julia
function mean(vector)
  sum=0
  avg=0 # initialize
    for i in 1:length(vector)
      sum=sum+vector[i] # add each component
      avg=sum/i
    end
  return avg
end

mean(v)

function demean!(vector)
  newvec=zeros(1,length(vector)) # create a vector
    for i in 1:length(vector)
      newvec[i] = vector[i] - mean(vector) # subtract the mean from each component
    end
  return newvec
end
```

## Problem 3.3
```julia
vec=zeros(1,10)
for i in 3:length(vec)-2
  vec[i] = 1
end
vec
```

## Problem 3.4
```julia
A=rand(5,5) # create matrix
v=zeros(1,5) # initialize vector to fill with avgs
l=length(v) 
for i in 1:l
  sum=0
  avg=0
  for j in 1:l
    sum=sum+A[i,j] # add to sum
      avg=sum/j # take avg
  end
  v[i]=avg # avg of col is recorded in v
  for j in 1:l
    A[i,j] = A[i,j] - v[i] # subtract avg from each val in col
  end
end
v
A
```


# Problem 4

## Problem 4.1
```julia
Pkg.add("Distributions")
using Distributions
yt=LogNormal(.03,.005)
samples=rand(yt,100)
```

## Problem 4.2
```julia
function X(t)
  P=0
  new=0
  num=ceil(Int, t) # make sure t is an integer
  for i in 1:num
    new = P + .4 + samples[i] + (P^2)/(1+P^2) - .42*P # phosphorus at t time
    P=new
  end
  return P
end
```

## Problem 4.3
```julia
plot(X, 1, 100, xlabel="Time", ylabel="Phosphorus level", label="X", legend=:topright)
```

# References

Arrays. Julia Documentation. https://docs.julialang.org/en/v1/base/arrays/#Base.eachindex 

Carpenter, S. R., Ludwig, D., & Brock, W. A. (1999). Management of Eutrophication for Lakes Subject to
 Potentially Irreversible Change. Ecological Applications, 9(3), 751-771. https://doi.org/10.2307/2641327

Gregory, V., Stachurski, A., & Watkins, N. (2017). MATLAB-Python-Julia cheatsheet. QuantEcon. 
https://cheatsheets.quantecon.org/

Julia InexactError: Int64. Stack Overflow. https://stackoverflow.com/questions/62157005/julia-inexacterror-int64 

The Julia REPL. Julia Documentation. https://docs.julialang.org/en/v1/stdlib/REPL/ 

(2022). LaTeX Math Symbols - A glossary. LATEX-TUTORIAL.COM. https://latex-tutorial.com/symbols/math-symbols/ 

LATEX syntax. Julia Documentation. https://juliadocs.github.io/Documenter.jl/v0.12/man/latex/ 

Quinn, J. D., Reed, P. M., & Keller, K. (2017). Direct policy search for robust multi-objective 
management of deeply uncertain socio-ecological tipping points. Environmental Modelling & Software, 92, 
125-141. https://doi.org/10.1016/j.envsoft.2017.02.017

Weave.jl - Scientific Reports Using Julia. Julia Documentation. https://weavejl.mpastell.com/stable/ 

